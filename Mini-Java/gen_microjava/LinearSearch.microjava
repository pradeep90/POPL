 class LinearSearch {
public static void main ( String [ ] a ) {
new ____NewMainClass____ ( ) . ____Main____ ( 0  ) ; } }  class LS { int [ ]
   number ;   int  size ; public void Start ( int  sz  ) { int  aux01 ;  int
   aux02 ;  int  ____TEMP____ ;  int  ____TEMP____ ;  int  ____TEMP____ ;  int
   ____TEMP____ ;  int  ____TEMP____ ;  int  ____TEMP____ ; ____TEMP____ = this
   ;  ____TEMP____ = this ;  ____TEMP____ = this ;  ____TEMP____ = this ;
   ____TEMP____ = this ;  ____TEMP____ = this ;  aux01 = ____TEMP____ . Init (
   sz  ) ;  ;  aux02 = ____TEMP____ . Print ( ) ;  ;  System.out.println ( 9999
   ) ;  System.out.println ( ____TEMP____ . Search ( 8  ) ;  ) ;
   System.out.println ( ____TEMP____ . Search ( 12  ) ;  ) ;
   System.out.println ( ____TEMP____ . Search ( 17  ) ;  ) ;
   System.out.println ( ____TEMP____ . Search ( 50  ) ;  ) ;  ____RET_VAL____ =
   55 ; }   public void Print ( ) { int  j ; j = 1 ;  while ( j < ( size ) ) {
   System.out.println ( number [ j ] ) ;  j = j + 1 ; }   ____RET_VAL____ = 0 ;
   }   public void Search ( int  num  ) { int  j ;  boolean  ls01 ;  int
   ifound ;  int  aux01 ;  int  aux02 ;  int  nt ; j = 1 ;  ls01 = false ;
   ifound = 0 ;  while ( j < ( size ) ) { aux01 = number [ j ] ;  aux02 = num +
   1 ;  if ( aux01 < num ) nt = 0 ;  else if ( ! ( aux01 < aux02 ) ) nt = 0 ;
   else { ls01 = true ;  ifound = 1 ;  j = size ; }    j = j + 1 ; }
   ____RET_VAL____ = ifound ; }   public void Init ( int  sz  ) { int  j ;  int
   k ;  int  aux01 ;  int  aux02 ; size = sz ;  number = new int [ sz ] ;  j =
   1 ;  k = size + 1 ;  while ( j < ( size ) ) { aux01 = 2 * j ;  aux02 = k - 3
   ;  number [ j ] = aux01 + aux02 ;  j = j + 1 ;  k = k - 1 ; }
   ____RET_VAL____ = 0 ; } }
class ____NewMainClass____ { public void ____Main____ ( int  ____arg_length____
   ) { int  ____printMe____ ; ____printMe____ = ____TEMP____ . Start ( 10  ) ;
   ;  System.out.println ( ____printMe____ ) ; } } 